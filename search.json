{"Protocols/SLROverlayDelegate.html#/c:@M@StreamLayer@objc(pl)SLROverlayDelegate(im)requestAudioDucking":{"name":"requestAudioDucking()","abstract":"<p>Invoked to initiate audio-ducking. Expected behaviour is to reduce output volume of the","parent_name":"SLROverlayDelegate"},"Protocols/SLROverlayDelegate.html#/c:@M@StreamLayer@objc(pl)SLROverlayDelegate(im)disableAudioDucking":{"name":"disableAudioDucking()","abstract":"<p>Invoked to signal that audio ducking is not required. Expected behaviour is to restore volume levels","parent_name":"SLROverlayDelegate"},"Protocols/SLROverlayDelegate.html#/c:@M@StreamLayer@objc(pl)SLROverlayDelegate(im)prepareAudioSessionFor:":{"name":"prepareAudioSession(for:)","abstract":"<p>Requests host-app to configure shared audio session for","parent_name":"SLROverlayDelegate"},"Protocols/SLROverlayDelegate.html#/c:@M@StreamLayer@objc(pl)SLROverlayDelegate(im)disableAudioSessionFor:":{"name":"disableAudioSession(for:)","abstract":"<p>When StreamLayer is done playing audio or recording voice this method","parent_name":"SLROverlayDelegate"},"Protocols/SLROverlayDelegate.html#/c:@M@StreamLayer@objc(pl)SLROverlayDelegate(im)shareInviteMessage":{"name":"shareInviteMessage()","abstract":"<p>This method must return custom text for a share message that is used","parent_name":"SLROverlayDelegate"},"Protocols/SLROverlayDelegate.html#/c:@M@StreamLayer@objc(pl)SLROverlayDelegate(im)waveMessage":{"name":"waveMessage()","abstract":"<p>Used when pinging your friends from who is watching quick access menu</p>","parent_name":"SLROverlayDelegate"},"Protocols/SLROverlayDelegate.html#/c:@M@StreamLayer@objc(pl)SLROverlayDelegate(im)overlayOpened":{"name":"overlayOpened()","abstract":"<p>Called when user opens StreamLayer Overlay</p>","parent_name":"SLROverlayDelegate"},"Protocols/SLROverlayDelegate.html#/c:@M@StreamLayer@objc(pl)SLROverlayDelegate(im)overlayClosed":{"name":"overlayClosed()","abstract":"<p>Called when user opens StreamLayer Overlay is closed by the user or other means (ie, programmatically)</p>","parent_name":"SLROverlayDelegate"},"Protocols/SLROverlayDelegate.html":{"name":"SLROverlayDelegate","abstract":"<p>StreamLayer SDK calls these methods on the host-app delegate"},"Enums/SLRAudioSessionType.html#/c:@M@StreamLayer@E@SLRAudioSessionType@SLRAudioSessionTypeGeneric":{"name":"generic","abstract":"<p>Undocumented</p>","parent_name":"SLRAudioSessionType"},"Enums/SLRAudioSessionType.html#/c:@M@StreamLayer@E@SLRAudioSessionType@SLRAudioSessionTypeVoice":{"name":"voice","abstract":"<p>Undocumented</p>","parent_name":"SLRAudioSessionType"},"Enums/SLRAudioSessionType.html":{"name":"SLRAudioSessionType","abstract":"<p>Audio Session that may be requested by StreamLayer Activities</p>"},"Classes/StreamLayer.html#/c:@M@StreamLayer@objc(cs)StreamLayer(cpy)activeOverlay":{"name":"activeOverlay","abstract":"<p>Returns active overlay if its presented</p>","parent_name":"StreamLayer"},"Classes/StreamLayer.html#/c:@M@StreamLayer@objc(cs)StreamLayer(cpy)activeController":{"name":"activeController","abstract":"<p>Returns top active overlay controller. There could only be 1 copy per app</p>","parent_name":"StreamLayer"},"Classes/StreamLayer.html#/c:@M@StreamLayer@objc(cs)StreamLayer(cm)initSDKWith:isDebug:loggerDelegate:":{"name":"initSDK(with:isDebug:loggerDelegate:)","abstract":"<p>Initializes SDK</p>","parent_name":"StreamLayer"},"Classes/StreamLayer.html#/c:@M@StreamLayer@objc(cs)StreamLayer(cm)createOverlay:overlayDelegate:":{"name":"createOverlay(_:overlayDelegate:)","abstract":"<p>Convenience method to initialize StreamLayer SDK</p>","parent_name":"StreamLayer"},"Classes/StreamLayer.html#/c:@M@StreamLayer@objc(cs)StreamLayer(cm)removeOverlay":{"name":"removeOverlay()","abstract":"<p>Convenience method to remove StreamLayer Controller","parent_name":"StreamLayer"},"Classes/StreamLayer.html#/s:11StreamLayerAAC06changeA5Event3for14andAddMenuItemyx_AA09SLRCustomhI0CSgts25LosslessStringConvertibleRzlFZ":{"name":"changeStreamEvent(for:andAddMenuItem:)","abstract":"<p>SDK supports event by event configuration. After StreamLayer SDK has been initialized to configure","parent_name":"StreamLayer"},"Classes/StreamLayer.html#/c:@M@StreamLayer@objc(cs)StreamLayer(cm)uploadDeviceAPNsTokenWithDeviceAPNsToken:":{"name":"uploadDeviceAPNsToken(deviceAPNsToken:)","parent_name":"StreamLayer"},"Classes/StreamLayer.html#/c:@M@StreamLayer@objc(cs)StreamLayer(cm)processDeepLinkWithURL:":{"name":"processDeepLink(withURL:)","parent_name":"StreamLayer"},"Classes/StreamLayer.html#/s:11StreamLayerAAC28didReceiveRemoteNotification8userInfoySDys11AnyHashableVypG_tFZ":{"name":"didReceiveRemoteNotification(userInfo:)","abstract":"<p>Detect receiving notifictation in background mode</p>","parent_name":"StreamLayer"},"Classes/StreamLayer.html#/s:11StreamLayerAAC27didOpenReceivedNotification_8userInfoySo06UNUserF6CenterC_SDys11AnyHashableVypGtFZ":{"name":"didOpenReceivedNotification(_:userInfo:)","abstract":"<p>When user open push notification and it will be move payload to app</p>","parent_name":"StreamLayer"},"Classes/StreamLayer.html":{"name":"StreamLayer","abstract":"<p>Namespace for StreamLayer SDK</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"}}